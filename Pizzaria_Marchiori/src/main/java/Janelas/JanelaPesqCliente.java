/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Janelas;

import Controladora.Interface_Grafica;
import Dominio.Cliente;
import Dominio.Pedido;
import java.text.ParseException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.hibernate.HibernateException;

/**
 *
 * @author luiz.marchiori
 */
public class JanelaPesqCliente extends javax.swing.JDialog {

    private Interface_Grafica gerIG;
    protected Cliente cliSelecionado;

    public JanelaPesqCliente(java.awt.Frame parent, boolean modal, Interface_Grafica gerIG) {
        super(parent, modal);
        initComponents();
        this.gerIG = gerIG;
        cliSelecionado = null;

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu2 = new javax.swing.JPopupMenu();
        menuPedidos = new javax.swing.JMenuItem();
        menuExcluir = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        lblNome = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        botPesquisar = new javax.swing.JButton();
        botSair = new javax.swing.JButton();
        botSelecionar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        menuPedidos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/intergraf/imagens/pizza.png"))); // NOI18N
        menuPedidos.setText("Ver Pedidos");
        menuPedidos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuPedidosActionPerformed(evt);
            }
        });
        jPopupMenu2.add(menuPedidos);

        menuExcluir.setBackground(new java.awt.Color(255, 51, 51));
        menuExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/intergraf/imagens/excluir.png"))); // NOI18N
        menuExcluir.setText("Excluir Cliente");
        menuExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuExcluirActionPerformed(evt);
            }
        });
        jPopupMenu2.add(menuExcluir);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Pesquisar Cliente");
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cliente", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        lblNome.setText("Nome");

        botPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/intergraf/imagens/lupacliente.png"))); // NOI18N
        botPesquisar.setText("Pesquisar");
        botPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botPesquisarActionPerformed(evt);
            }
        });

        botSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/intergraf/imagens/saircliente.png"))); // NOI18N
        botSair.setText("Sair");
        botSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botSairActionPerformed(evt);
            }
        });

        botSelecionar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/intergraf/imagens/selecione.png"))); // NOI18N
        botSelecionar.setText("Selecionar");
        botSelecionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botSelecionarActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "Bairro", "Rua", "NÃºmero", "Telefone"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setComponentPopupMenu(jPopupMenu2);
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(lblNome)
                        .addGap(18, 18, 18)
                        .addComponent(txtNome)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(botPesquisar))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(botSair, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(490, 490, 490)
                        .addComponent(botSelecionar)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtNome)
                        .addComponent(lblNome))
                    .addComponent(botPesquisar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botSelecionar)
                    .addComponent(botSair))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public Cliente getCliente() {
        return cliSelecionado;
    }

    private void botSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botSairActionPerformed
        gerIG.janelaCadPizzaFechar(this);
    }//GEN-LAST:event_botSairActionPerformed

    private void botPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botPesquisarActionPerformed
        try {
            List<Cliente> lista = gerIG.getGerDominio().pesquisarCliente(txtNome.getText());

            // APAGA as linhas da tabela
            ((DefaultTableModel) jTable1.getModel()).setNumRows(0);

            for (Cliente cli : lista) {
                // ADICIONA LINHAS NA TABELA        
                ((DefaultTableModel) jTable1.getModel()).addRow(cli.toArray());
            }

        } catch (HibernateException | ParseException ex) {
            JOptionPane.showMessageDialog(this, ex, "ERRO ao PESQUISAR Cliente", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_botPesquisarActionPerformed

    private void botSelecionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botSelecionarActionPerformed
        // Pega a linha selecionada
        int linha = jTable1.getSelectedRow();
        if (linha >= 0) {
            cliSelecionado = (Cliente) jTable1.getValueAt(linha, 0);
        } else {
            JOptionPane.showMessageDialog(this, "Selecione uma linha.", "Pesquisar cliente", JOptionPane.ERROR_MESSAGE);
        }

        this.setVisible(false);
    }//GEN-LAST:event_botSelecionarActionPerformed

    private void menuPedidosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuPedidosActionPerformed
        int linha = jTable1.getSelectedRow();
        if (linha >= 0) {
            cliSelecionado = (Cliente) jTable1.getValueAt(linha, 0);

            gerIG.getGerDominio().carregarPedidos(cliSelecionado);

            List<Pedido> pedidos = cliSelecionado.getPedido();
            for (Pedido ped : pedidos) {
                // Mostrar
                JOptionPane.showMessageDialog(rootPane, "ID do Pedido: " + ped.getIdPedido() + " - "
                        + "Itens do Pedido: " + ped.getItenspedido() + " - "
                        + "Valor Total: " + ped.getValorTotal());
            }

        } else {
            JOptionPane.showMessageDialog(this, "Selecione uma linha.", "Pesquisar cliente", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_menuPedidosActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        try {
            
            // Lista todos os clientes na tabela
            List<Cliente> lista = gerIG.getGerDominio().pesquisarCliente("");

            // APAGA as linhas da tabela
            ((DefaultTableModel) jTable1.getModel()).setNumRows(0);

            for (Cliente cli : lista) {
                // ADICIONAR LINHA NA TABELA        
                ((DefaultTableModel) jTable1.getModel()).addRow(cli.toArray());
            }

        } catch (HibernateException | ParseException ex) {
            JOptionPane.showMessageDialog(this, ex, "ERRO ao PESQUISAR Cliente", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_formComponentShown

    private void menuExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuExcluirActionPerformed
        int linha = jTable1.getSelectedRow();
        if (linha >= 0) {

            try {
                Cliente cli = (Cliente) jTable1.getValueAt(linha, 0);
                if (JOptionPane.showConfirmDialog(this, "Deseja realmente excluir esse cliente?", "ConfirmaÃ§Ã£o", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                    gerIG.getGerDominio().excluirCliente(cli);
                    ((DefaultTableModel) jTable1.getModel()).removeRow(linha);
                    JOptionPane.showMessageDialog(this, cli.getNome() + " excluÃ­do com sucesso.", "Mensagem", JOptionPane.ERROR_MESSAGE);
                }

            } catch (HibernateException ex) {
                JOptionPane.showMessageDialog(this, ex, "ERRO ao PESQUISAR Cliente", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Selecione uma linha.", "Pesquisar cliente", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_menuExcluirActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botPesquisar;
    private javax.swing.JButton botSair;
    private javax.swing.JButton botSelecionar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPopupMenu jPopupMenu2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblNome;
    private javax.swing.JMenuItem menuExcluir;
    private javax.swing.JMenuItem menuPedidos;
    private javax.swing.JTextField txtNome;
    // End of variables declaration//GEN-END:variables
}
